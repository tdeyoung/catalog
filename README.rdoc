== README

This README would normally document whatever steps are necessary to get the
application up and running.

Things you may want to cover:

* Ruby version

* System dependencies

* Configuration

* Database creation

* Database initialization

* How to run the test suite

* Services (job queues, cache servers, search engines, etc.)

* Deployment instructions

* ...


Please feel free to use a different markup language if you do not plan to run
<tt>rake doc:app</tt>.

Testing specifications for Items:

title:text - allows for spaces and multi word titles
composer_fname:text - allows for initials and spaces
composer_lname:text
arranger:text
publisher:text
ensemble:enum - band, choir, general_music, orchestra, other
level:text
location:text
comments:text

-title must be present
-title must be between 3 and 80 characters
-composer_lname must be present
-ensemble must be valid
-location must be present

    {
        "id": 3,
        "title": "This is the day",
        "composer_fname": "public",
        "composer_lname": "domain",
        "arranger": "",
        "publisher": "realgoodmusic publisher",
        "ensemble": "general_music",
        "level": "elementary music",
        "location": "Argus Music School",
        "comments": "",
        "url": "http://localhost:3000/items/3.json"
    }

    Tims-MacBook-Pro:catalog timdeyoung$ rake routes
     Prefix Verb   URI Pattern               Controller#Action
  users_new GET    /users/new(.:format)      users#new
users_index GET    /users/index(.:format)    users#index
items_index GET    /items/index(.:format)    items#index
       root GET    /                         static_pages#home
       help GET    /help(.:format)           static_pages#help
      about GET    /about(.:format)          static_pages#about
    contact GET    /contact(.:format)        static_pages#contact
     signup GET    /signup(.:format)         users#new
      users GET    /users(.:format)          users#show
      items GET    /items(.:format)          items#index
            POST   /items(.:format)          items#create
   new_item GET    /items/new(.:format)      items#new
  edit_item GET    /items/:id/edit(.:format) items#edit
       item GET    /items/:id(.:format)      items#show
            PATCH  /items/:id(.:format)      items#update
            PUT    /items/:id(.:format)      items#update
            DELETE /items/:id(.:format)      items#destroy
            GET    /users(.:format)          users#index
            POST   /users(.:format)          users#create
   new_user GET    /users/new(.:format)      users#new
  edit_user GET    /users/:id/edit(.:format) users#edit
       user GET    /users/:id(.:format)      users#show
            PATCH  /users/:id(.:format)      users#update
            PUT    /users/:id(.:format)      users#update
            DELETE /users/:id(.:format)      users#destroy


user_id code taken from the _form.html.erb partial, reuse to add user_id to item listing:

      <div class="field">
        <%= f.label :user_id %><br>
        <%= f.select :user_id,
            options_for_select(User.all.collect {|a| ["#{a.name}", a.id]},
            selected: (@item.user ? @item.user.id : User.first.id)),
            {} %>
      </div> 